import dtoolconfig
import panda3d.core
from _typeshed import Incomplete
from typing import Any, ClassVar

Dtool_PyNativeInterface: int

class ARToolKit(dtoolconfig.DTOOL_SUPER_BASE):
    DtoolClassDict: ClassVar[dict] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def analyze(self, constARToolKitself, Texturetex, booldo_flip_texture) -> Any: ...
    def attachPattern(self, *args, **kwargs): ...
    def attach_pattern(self, constARToolKitself, constFilenamepattern, NodePathpath) -> Any: ...
    def detachPatterns(self, *args, **kwargs): ...
    def detach_patterns(self, constARToolKitself) -> Any: ...
    @staticmethod
    def make(NodePathcamera, constFilenameparamfile, doublemarkersize) -> Any: ...
    def setThreshold(self, *args, **kwargs): ...
    def set_threshold(self, constARToolKitself, doublen) -> Any: ...
    def __copy__(self): ...
    def __deepcopy__(self): ...

class WebcamVideo(panda3d.core.MovieVideo):
    DtoolClassDict: ClassVar[dict] = ...
    options: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    @staticmethod
    def getClassType(*args, **kwargs): ...
    def getFps(self, *args, **kwargs): ...
    @staticmethod
    def getNumOptions(*args, **kwargs): ...
    @staticmethod
    def getOption(*args, **kwargs): ...
    @staticmethod
    def getOptions(*args, **kwargs): ...
    def getPixelFormat(self, *args, **kwargs): ...
    def getSizeX(self, *args, **kwargs): ...
    def getSizeY(self, *args, **kwargs): ...
    @staticmethod
    def get_class_type() -> Any: ...
    def get_fps(self, WebcamVideoself) -> Any: ...
    @staticmethod
    def get_num_options() -> Any: ...
    @staticmethod
    def get_option(intn) -> Any: ...
    @staticmethod
    def get_options(*args, **kwargs): ...
    def get_pixel_format(self, WebcamVideoself) -> Any: ...
    def get_size_x(self, WebcamVideoself) -> Any: ...
    def get_size_y(self, WebcamVideoself) -> Any: ...
    def output(self, WebcamVideoself, ostreamout) -> Any: ...

def Dtool_BorrowThisReference(*args, **kwargs): ...
